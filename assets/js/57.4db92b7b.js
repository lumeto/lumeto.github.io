(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{507:function(v,_,i){"use strict";i.r(_);var l=i(44),t=Object(l.a)({},(function(){var v=this,_=v.$createElement,i=v._self._c||_;return i("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[i("h2",{attrs:{id:"从输入url到页面加载的全过程"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#从输入url到页面加载的全过程"}},[v._v("#")]),v._v(" 从输入URL到页面加载的全过程")]),v._v(" "),i("p",[i("img",{attrs:{src:"/images/urlhttp.png",alt:"url"}})]),v._v(" "),i("ol",[i("li",[v._v("首先在浏览器中输入URL")]),v._v(" "),i("li",[v._v("查找缓存：浏览器先查看浏览器缓存-系统缓存-路由缓存中是否有该地址页面，如果有则显示页面内容。如果没有则进行下一步。")])]),v._v(" "),i("ul",[i("li",[v._v("浏览器缓存：浏览器会记录DNS一段时间，因此，只是第一个地方解析DNS请求；")]),v._v(" "),i("li",[v._v("操作系统缓存:如果在浏览器缓存中不包含这个记录，则会使系统调用操作系统， 获取操作系统的记录(保存最近的DNS查询缓存)；")]),v._v(" "),i("li",[v._v("路由器缓存：如果上述两个步骤均不能成功获取DNS记录，继续搜索路由器缓存；")]),v._v(" "),i("li",[v._v("ISP缓存：若上述均失败，继续向ISP搜索；")])]),v._v(" "),i("ol",{attrs:{start:"3"}},[i("li",[i("p",[v._v("DNS域名解析：浏览器向DNS服务器发起请求，解析该URL中的域名对应的IP地址。DNS服务器是基于UDP的，因此会用到UDP协议。")])]),v._v(" "),i("li",[i("p",[v._v("建立TCP连接：解析出IP地址后，根据IP地址和默认80端口，和服务器建立TCP连接")])]),v._v(" "),i("li",[i("p",[v._v("发起HTTP请求：浏览器发起读取文件的HTTP请求，，该请求报文作为TCP三次握手的第三次数据发送给服务器")])]),v._v(" "),i("li",[i("p",[v._v("服务器响应请求并返回结果：服务器对浏览器请求做出响应，并把对应的html文件发送给浏览器")])]),v._v(" "),i("li",[i("p",[v._v("关闭TCP连接：通过四次挥手释放TCP连接")])]),v._v(" "),i("li",[i("p",[v._v("浏览器渲染：客户端（浏览器）解析HTML内容并渲染出来，浏览器接收到数据包后的解析流程为：")]),v._v(" "),i("ul",[i("li",[v._v("构建DOM树：词法分析然后解析成DOM树（dom tree），是由dom元素及属性节点组成，树的根是document对象")]),v._v(" "),i("li",[v._v("构建CSS规则树：生成CSS规则树（CSS Rule Tree）")]),v._v(" "),i("li",[v._v("构建render树：Web浏览器将DOM和CSSOM结合，并构建出渲染树（render tree）")]),v._v(" "),i("li",[v._v("布局（Layout）：计算出每个节点在屏幕中的位置")]),v._v(" "),i("li",[v._v("绘制（Painting）：即遍历render树，并使用UI后端层绘制每个节点。")])])]),v._v(" "),i("li",[i("p",[v._v("JS引擎解析过程：调用JS引擎执行JS代码（JS的解释阶段，预处理阶段，执行阶段生成执行上下文，VO，作用域链、回收机制等等）")]),v._v(" "),i("ul",[i("li",[v._v("创建window对象：window对象也叫全局执行环境，当页面产生时就被创建，所有的全局变量和函数都属于window的属性和方法，而DOM Tree也会映射在window的doucment对象上。当关闭网页或者关闭浏览器时，全局执行环境会被销毁。")]),v._v(" "),i("li",[v._v("加载文件：完成js引擎分析它的语法与词法是否合法，如果合法进入预编译")]),v._v(" "),i("li",[v._v("预编译：在预编译的过程中，浏览器会寻找全局变量声明，把它作为window的属性加入到window对象中，并给变量赋值为'undefined'；寻找全局函数声明，把它作为window的方法加入到window对象中，并将函数体赋值给他（匿名函数是不参与预编译的，因为它是变量）。而变量提升作为不合理的地方在ES6中已经解决了，函数提升还存在。")]),v._v(" "),i("li",[v._v("解释执行：执行到变量就赋值，如果变量没有被定义，也就没有被预编译直接赋值，在ES5非严格模式下这个变量会成为window的一个属性，也就是成为全局变量。string、int这样的值就是直接把值放在变量的存储空间里，object对象就是把指针指向变量的存储空间。函数执行，就将函数的环境推入一个环境的栈中，执行完成后再弹出，控制权交还给之前的环境。JS作用域其实就是这样的执行流机制实现的。")])])])])])}),[],!1,null,null,null);_.default=t.exports}}]);