(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{564:function(v,e,t){"use strict";t.r(e);var a=t(44),s=Object(a.a)({},(function(){var v=this,e=v.$createElement,t=v._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"如何理解mvvm原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何理解mvvm原理"}},[v._v("#")]),v._v(" 如何理解MVVM原理")]),v._v(" "),t("h3",{attrs:{id:"什么是mvvm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是mvvm"}},[v._v("#")]),v._v(" 什么是MVVM？")]),v._v(" "),t("p",[v._v("MVVM是一种软件架构模式，是Model-View-ViewModel的缩写。")]),v._v(" "),t("h4",{attrs:{id:"模型-model"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模型-model"}},[v._v("#")]),v._v(" 模型（Model）")]),v._v(" "),t("p",[v._v("模型是指代表真实状态内容的领域模型（面向对象），或指代表内容的数据访问层（以数据为中心）。在Vue中是data,computed,methods等")]),v._v(" "),t("h4",{attrs:{id:"viewmodel层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#viewmodel层"}},[v._v("#")]),v._v(" ViewModel层")]),v._v(" "),t("p",[v._v("在Vue中是实例的VM对象")]),v._v(" "),t("h4",{attrs:{id:"视图-view"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#视图-view"}},[v._v("#")]),v._v(" 视图（View）")]),v._v(" "),t("p",[v._v("就像在MVC和MVP模式中一样，视图是用户在屏幕上看到的结构、布局和外观（UI）。")]),v._v(" "),t("h3",{attrs:{id:"与mvc的对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#与mvc的对比"}},[v._v("#")]),v._v(" 与MVC的对比")]),v._v(" "),t("ol",[t("li",[v._v("实现数据与视图的分离")]),v._v(" "),t("li",[v._v("通过数据来驱动视图，开发者只需要关心数据变化，DOM操作被封装了")])]),v._v(" "),t("h3",{attrs:{id:"vue中的mvvm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue中的mvvm"}},[v._v("#")]),v._v(" Vue中的MVVM")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/mvvm.png",alt:"mvvm"}})]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),t("p",[v._v("Vue中实现MVVM模型的三个核心：")]),v._v(" "),t("ol",[t("li",[v._v("响应式：通过数据劫持(vue2"),t("code",[v._v("Object.defineProperty")]),v._v("，vue3"),t("code",[v._v("Proxy")]),v._v(")，从而监听数据（Model）的变化")]),v._v(" "),t("li",[v._v("模板解析：解析Vue的模板中的事件绑定，从而监听View的变换")]),v._v(" "),t("li",[v._v("渲染：将vue模板+数据渲染成html")])])]),v._v(" "),t("h2",{attrs:{id:"mvvm-优点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mvvm-优点"}},[v._v("#")]),v._v(" mvvm 优点")]),v._v(" "),t("ol",[t("li",[t("code",[v._v("低耦合")]),v._v("。视图（View）可以独立于Model变化和修改，一个Model可以绑定到不同的View上，当View变化的时候Model可以不变化，当Model变化的时候View也可以不变；")]),v._v(" "),t("li",[t("code",[v._v("可重用性")]),v._v("。你可以把一些视图逻辑放在一个Model里面，让很多View重用这段视图逻辑。")]),v._v(" "),t("li",[t("code",[v._v("独立开发")]),v._v("。开发人员可以专注于业务逻辑和数据的开发(ViewModel)，设计人员可以专注于页面设计。")]),v._v(" "),t("li",[t("code",[v._v("可测试")]),v._v("。")])])])}),[],!1,null,null,null);e.default=s.exports}}]);